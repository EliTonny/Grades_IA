package grades_ia;

import busca.BuscaIterativo;
import busca.BuscaLargura;
import busca.BuscaProfundidade;
import busca.MostraStatusConsole;
import busca.Nodo;
import java.util.ArrayList;
import javax.swing.JOptionPane;

public class Frame_Monta_Grade extends javax.swing.JFrame {
    
    private ArrayList<Disciplina> disciplinas;

    /**
     * Creates new form Frame_Monta_Grade
     */
    public Frame_Monta_Grade() {
        initComponents();
        disciplinas = new ArrayList<>();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        tfNomeDisciplina = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        tfDiaSemana = new javax.swing.JTextField();
        tfHorario = new javax.swing.JTextField();
        btCriaDisc = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        tfDiaSemana2 = new javax.swing.JTextField();
        tfHorario2 = new javax.swing.JTextField();
        cbAprovado = new javax.swing.JCheckBox();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        tfDiscGeraDependente = new javax.swing.JTextField();
        tfDiscDependente = new javax.swing.JTextField();
        btCriaDep = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        btGeraGrade = new javax.swing.JButton();
        btCenario1 = new javax.swing.JButton();
        btCenario2 = new javax.swing.JButton();
        btCenario3 = new javax.swing.JButton();
        cbBusca = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel2.setText("Nome:");

        jLabel1.setText("Horário:");

        jLabel5.setText("Dia da Semana:");

        tfHorario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfHorarioActionPerformed(evt);
            }
        });

        btCriaDisc.setText("Criar");
        btCriaDisc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCriaDiscActionPerformed(evt);
            }
        });

        jLabel6.setText("Horário 2:");

        jLabel7.setText("Dia da Semana 2:");

        cbAprovado.setText("Aprovado");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(tfNomeDisciplina)
                            .addComponent(tfHorario)
                            .addComponent(tfDiaSemana, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)))
                    .addComponent(cbAprovado))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfDiaSemana2)
                            .addComponent(tfHorario2, javax.swing.GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btCriaDisc)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tfNomeDisciplina, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(tfHorario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(tfHorario2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(tfDiaSemana, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(tfDiaSemana2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btCriaDisc)
                    .addComponent(cbAprovado))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Criar Disciplina", jPanel1);

        jLabel3.setText("Disciplina:");

        jLabel4.setText("Dependente de:");

        btCriaDep.setText("Criar");
        btCriaDep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCriaDepActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btCriaDep)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(tfDiscGeraDependente, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
                            .addComponent(tfDiscDependente))))
                .addContainerGap(244, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(tfDiscDependente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(tfDiscGeraDependente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btCriaDep)
                .addContainerGap(60, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Cadastrar Dependência", jPanel2);

        btGeraGrade.setText("Gerar grade");
        btGeraGrade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btGeraGradeActionPerformed(evt);
            }
        });

        btCenario1.setText("Usar cenário 1");
        btCenario1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCenario1ActionPerformed(evt);
            }
        });

        btCenario2.setText("Usar cenário 2");
        btCenario2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCenario2ActionPerformed(evt);
            }
        });

        btCenario3.setText("Usar cenário 3");
        btCenario3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCenario3ActionPerformed(evt);
            }
        });

        cbBusca.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Largura", "Profundidade", "Iterativo" }));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btGeraGrade)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btCenario1)
                            .addComponent(btCenario2)
                            .addComponent(btCenario3))
                        .addGap(83, 83, 83)
                        .addComponent(cbBusca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(163, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btCenario1)
                    .addComponent(cbBusca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btCenario2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btCenario3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                .addComponent(btGeraGrade)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Executar", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tfHorarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfHorarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfHorarioActionPerformed

    private void btCriaDiscActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCriaDiscActionPerformed
        int[] horario = new int[2];
        int[] dia = new int[2];
        
        horario[0] = Integer.parseInt(tfHorario.getText());
        horario[1] = Integer.parseInt(tfHorario2.getText());
        dia[0] = Integer.parseInt(tfDiaSemana.getText());
        dia[1] = Integer.parseInt(tfDiaSemana2.getText());
        
        Disciplina novoDisc = new Disciplina(tfNomeDisciplina.getText());
        novoDisc.setHorario(horario);
        novoDisc.setDia(dia);
        novoDisc.setAprovado(cbAprovado.isSelected());
        
        disciplinas.add(novoDisc);
        tfNomeDisciplina.setText("");
        JOptionPane.showMessageDialog(rootPane, "Disciplina cadastrada!", null, WIDTH, null);
    }//GEN-LAST:event_btCriaDiscActionPerformed

    private void btCriaDepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCriaDepActionPerformed
        Disciplina discDependente = new Disciplina(tfDiscDependente.getText());
        Disciplina discGeraDependente = new Disciplina(tfDiscGeraDependente.getText());
        
        discGeraDependente = disciplinas.get(disciplinas.indexOf(discGeraDependente));
        discDependente = disciplinas.get(disciplinas.indexOf(discDependente));
        discDependente.setDependencia(discGeraDependente);
        
        for (Disciplina disciplina : disciplinas) {
            System.out.println(disciplina.toString());
        }
        
    }//GEN-LAST:event_btCriaDepActionPerformed

    private void btGeraGradeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btGeraGradeActionPerformed
        String[][] semana = new String[5][2];
        ArrayList<Disciplina> discNaoFinalizadas = new ArrayList<>();
        for (Disciplina disc : disciplinas) {
            if(!disc.isAprovado()){
                discNaoFinalizadas.add(disc);
            }
        }
        MontaGrade inicial = new MontaGrade(semana, discNaoFinalizadas);
        Nodo nodo = new BuscaLargura().busca(inicial);
        if(nodo == null){
            JOptionPane.showMessageDialog(rootPane, "Sem solução!");
        } else{
            System.out.println(nodo.montaCaminho());
            JOptionPane.showMessageDialog(rootPane, "Solução: \n" + nodo.montaCaminho());
        }
    }//GEN-LAST:event_btGeraGradeActionPerformed

    private void btCenario1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCenario1ActionPerformed
        String[][] semana = new String[5][2];
        int[] horario = new int[2];
        int[] dia = new int[2];
        ArrayList<Disciplina> discNaoFinalizadas = new ArrayList<>();
        
        Disciplina novoDisc = new Disciplina("PS2");
        horario[0] = 0;
        horario[1] = 1;
        dia[0] = 0; //segunda
        dia[1] = 1;  //terca
        novoDisc.setHorario(horario);
        novoDisc.setDia(dia);
        novoDisc.setAprovado(false);
        discNaoFinalizadas.add(novoDisc);
        
        novoDisc = new Disciplina("Robotica");
        horario = new int[2];
        dia = new int[2];
        horario[0] = 1;
        horario[1] = 0;
        dia[0] = 0; //segunda
        dia[1] = 1;  //terca
        novoDisc.setHorario(horario);
        novoDisc.setDia(dia);
        novoDisc.setAprovado(false);
        discNaoFinalizadas.add(novoDisc);
        
        novoDisc = new Disciplina("WEB");
        horario = new int[2];
        dia = new int[2];        
        horario[0] = 0;
        horario[1] = 0;
        dia[0] = 2; //quarta
        dia[1] = 3;  //quinta
        novoDisc.setHorario(horario);
        novoDisc.setDia(dia);
        novoDisc.setAprovado(false);
        discNaoFinalizadas.add(novoDisc);
        
        novoDisc = new Disciplina("IA");
        horario = new int[2];
        dia = new int[2];        
        horario[0] = 1;
        horario[1] = 1;
        dia[0] = 2; //quarta
        dia[1] = 4;  //sexta
        novoDisc.setHorario(horario);
        novoDisc.setDia(dia);
        novoDisc.setAprovado(false);
        discNaoFinalizadas.add(novoDisc);
        
        novoDisc = new Disciplina("CG");
        horario = new int[2];
        dia = new int[2];        
        horario[0] = 1;
        horario[1] = 0;
        dia[0] = 3; //quinta
        dia[1] = 4;  //sexta
        novoDisc.setHorario(horario);
        novoDisc.setDia(dia);
        novoDisc.setAprovado(false);
        discNaoFinalizadas.add(novoDisc);
        
        
        novoDisc = new Disciplina("CG2");
        horario = new int[2];
        dia = new int[2];        
        horario[0] = 1;
        horario[1] = 0;
        dia[0] = 3; //quinta
        dia[1] = 4;  //sexta
        novoDisc.setHorario(horario);
        novoDisc.setDia(dia);
        novoDisc.setAprovado(false);
        discNaoFinalizadas.add(novoDisc);
        
        MontaGrade inicial = new MontaGrade(semana, discNaoFinalizadas);
        System.out.println(cbBusca.getSelectedIndex());
        Nodo nodo;
        long tempo = System.nanoTime();
        if(cbBusca.getSelectedIndex() == 0){
            nodo = new BuscaLargura(new MostraStatusConsole()).busca(inicial);
        } else if(cbBusca.getSelectedIndex() == 1){
            nodo = new BuscaProfundidade(new MostraStatusConsole()).busca(inicial);
        } else{
           nodo = new BuscaIterativo(new MostraStatusConsole()).busca(inicial);
        }        
        tempo = System.nanoTime() - tempo;
        
        if(nodo == null){
            JOptionPane.showMessageDialog(rootPane, "Sem solução!");
        } else{
            System.out.println(nodo.montaCaminho());
            System.out.println(tempo);
            JOptionPane.showMessageDialog(rootPane, "Solução: \n" + nodo.getEstado().toString());
        }
    }//GEN-LAST:event_btCenario1ActionPerformed

    private void btCenario2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCenario2ActionPerformed
        String[][] semana = new String[5][2];
        int[] horario = new int[2];
        int[] dia = new int[2];
        ArrayList<Disciplina> discNaoFinalizadas = new ArrayList<>();
        Disciplina dependencia;
        
        Disciplina novoDisc = new Disciplina("PS2");
        horario[0] = 0;
        horario[1] = 1;
        dia[0] = 0; //segunda
        dia[1] = 1;  //terca
        novoDisc.setHorario(horario);
        novoDisc.setDia(dia);
        novoDisc.setAprovado(false);
        discNaoFinalizadas.add(novoDisc);
        
        novoDisc = new Disciplina("Robotica");
        horario = new int[2];
        dia = new int[2];
        horario[0] = 1;
        horario[1] = 0;
        dia[0] = 0; //segunda
        dia[1] = 1;  //terca
        novoDisc.setHorario(horario);
        novoDisc.setDia(dia);
        novoDisc.setAprovado(false);
        discNaoFinalizadas.add(novoDisc);
        
        novoDisc = new Disciplina("WEB");
        horario = new int[2];
        dia = new int[2];        
        horario[0] = 0;
        horario[1] = 0;
        dia[0] = 2; //quarta
        dia[1] = 3;  //quinta
        novoDisc.setHorario(horario);
        novoDisc.setDia(dia);
        novoDisc.setAprovado(false);
        discNaoFinalizadas.add(novoDisc);
        
        novoDisc = new Disciplina("Grafos");
        horario = new int[2];
        dia = new int[2];        
        horario[0] = 1;
        horario[1] = 1;
        dia[0] = 2; //quarta
        dia[1] = 4;  //sexta
        novoDisc.setHorario(horario);
        novoDisc.setDia(dia);
        novoDisc.setAprovado(false);
        discNaoFinalizadas.add(novoDisc);
        dependencia = novoDisc;
        
        novoDisc = new Disciplina("IA");
        horario = new int[2];
        dia = new int[2];        
        horario[0] = 1;
        horario[1] = 1;
        dia[0] = 2; //quarta
        dia[1] = 4;  //sexta
        novoDisc.setHorario(horario);
        novoDisc.setDia(dia);
        novoDisc.setAprovado(false);
        novoDisc.setDependencia(dependencia);
        discNaoFinalizadas.add(novoDisc);
        
        novoDisc = new Disciplina("CG");
        horario = new int[2];
        dia = new int[2];        
        horario[0] = 1;
        horario[1] = 0;
        dia[0] = 3; //quinta
        dia[1] = 4;  //sexta
        novoDisc.setHorario(horario);
        novoDisc.setDia(dia);
        novoDisc.setAprovado(false);
        discNaoFinalizadas.add(novoDisc);
        
        
        novoDisc = new Disciplina("CG2");
        horario = new int[2];
        dia = new int[2];        
        horario[0] = 1;
        horario[1] = 0;
        dia[0] = 3; //quinta
        dia[1] = 4;  //sexta
        novoDisc.setHorario(horario);
        novoDisc.setDia(dia);
        novoDisc.setAprovado(false);
        discNaoFinalizadas.add(novoDisc);
        
        MontaGrade inicial = new MontaGrade(semana, discNaoFinalizadas);
        System.out.println(cbBusca.getSelectedIndex());
        Nodo nodo;
        long tempo = System.nanoTime();
        if(cbBusca.getSelectedIndex() == 0){
            nodo = new BuscaLargura(new MostraStatusConsole()).busca(inicial);
        } else if(cbBusca.getSelectedIndex() == 1){
            nodo = new BuscaProfundidade(new MostraStatusConsole()).busca(inicial);
        } else{
           nodo = new BuscaIterativo(new MostraStatusConsole()).busca(inicial);
        }        
        tempo = System.nanoTime() - tempo;
        
        if(nodo == null){
            JOptionPane.showMessageDialog(rootPane, "Sem solução!");
        } else{
            System.out.println(tempo);
            System.out.println(nodo.montaCaminho());
            JOptionPane.showMessageDialog(rootPane, "Solução: \n" + nodo.getEstado().toString());
        }
    }//GEN-LAST:event_btCenario2ActionPerformed

    private void btCenario3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCenario3ActionPerformed
        String[][] semana = new String[5][2];
        int[] horario = new int[2];
        int[] dia = new int[2];
        ArrayList<Disciplina> discNaoFinalizadas = new ArrayList<>();
        Disciplina dependencia;
        
        Disciplina novoDisc = new Disciplina("PS2");
        horario[0] = 0;
        horario[1] = 1;
        dia[0] = 0; //segunda
        dia[1] = 1;  //terca
        novoDisc.setHorario(horario);
        novoDisc.setDia(dia);
        novoDisc.setAprovado(false);
        discNaoFinalizadas.add(novoDisc);
        
        novoDisc = new Disciplina("Robotica");
        horario = new int[2];
        dia = new int[2];
        horario[0] = 1;
        horario[1] = 0;
        dia[0] = 0; //segunda
        dia[1] = 1;  //terca
        novoDisc.setHorario(horario);
        novoDisc.setDia(dia);
        novoDisc.setAprovado(false);
        discNaoFinalizadas.add(novoDisc);
        
        novoDisc = new Disciplina("WEB");
        horario = new int[2];
        dia = new int[2];        
        horario[0] = 0;
        horario[1] = 0;
        dia[0] = 2; //quarta
        dia[1] = 3;  //quinta
        novoDisc.setHorario(horario);
        novoDisc.setDia(dia);
        novoDisc.setAprovado(false);
        discNaoFinalizadas.add(novoDisc);
        
        novoDisc = new Disciplina("Grafos");
        horario = new int[2];
        dia = new int[2];        
        horario[0] = 1;
        horario[1] = 1;
        dia[0] = 1; //quarta
        dia[1] = 1;  //sexta
        novoDisc.setHorario(horario);
        novoDisc.setDia(dia);
        novoDisc.setAprovado(false);
        discNaoFinalizadas.add(novoDisc);
        dependencia = novoDisc;
        
        novoDisc = new Disciplina("IA");
        horario = new int[2];
        dia = new int[2];        
        horario[0] = 1;
        horario[1] = 1;
        dia[0] = 2; //quarta
        dia[1] = 4;  //sexta
        novoDisc.setHorario(horario);
        novoDisc.setDia(dia);
        novoDisc.setAprovado(false);
        novoDisc.setDependencia(dependencia);
        discNaoFinalizadas.add(novoDisc);
        
        novoDisc = new Disciplina("CG");
        horario = new int[2];
        dia = new int[2];        
        horario[0] = 1;
        horario[1] = 0;
        dia[0] = 3; //quinta
        dia[1] = 4;  //sexta
        novoDisc.setHorario(horario);
        novoDisc.setDia(dia);
        novoDisc.setAprovado(false);
        discNaoFinalizadas.add(novoDisc);
        
        
        novoDisc = new Disciplina("CG2");
        horario = new int[2];
        dia = new int[2];        
        horario[0] = 1;
        horario[1] = 0;
        dia[0] = 3; //quinta
        dia[1] = 4;  //sexta
        novoDisc.setHorario(horario);
        novoDisc.setDia(dia);
        novoDisc.setAprovado(false);
        discNaoFinalizadas.add(novoDisc);
        
        MontaGrade inicial = new MontaGrade(semana, discNaoFinalizadas);
        System.out.println(cbBusca.getSelectedIndex());
        Nodo nodo;
        long tempo = System.nanoTime();
        if(cbBusca.getSelectedIndex() == 0){
            nodo = new BuscaLargura(new MostraStatusConsole()).busca(inicial);
        } else if(cbBusca.getSelectedIndex() == 1){
            nodo = new BuscaProfundidade(new MostraStatusConsole()).busca(inicial);
        } else{
           nodo = new BuscaIterativo(new MostraStatusConsole()).busca(inicial);
        }        
        tempo = System.nanoTime() - tempo;
        
        if(nodo == null){
            System.out.println(tempo);
            JOptionPane.showMessageDialog(rootPane, "Sem solução!");
        } else{
            System.out.println(nodo.montaCaminho());
            System.out.println(tempo);
            JOptionPane.showMessageDialog(rootPane, "Solução: \n" + nodo.getEstado().toString());
        }
       
        
    }//GEN-LAST:event_btCenario3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Frame_Monta_Grade.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Frame_Monta_Grade.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Frame_Monta_Grade.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Frame_Monta_Grade.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Frame_Monta_Grade().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btCenario1;
    private javax.swing.JButton btCenario2;
    private javax.swing.JButton btCenario3;
    private javax.swing.JButton btCriaDep;
    private javax.swing.JButton btCriaDisc;
    private javax.swing.JButton btGeraGrade;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JCheckBox cbAprovado;
    private javax.swing.JComboBox cbBusca;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField tfDiaSemana;
    private javax.swing.JTextField tfDiaSemana2;
    private javax.swing.JTextField tfDiscDependente;
    private javax.swing.JTextField tfDiscGeraDependente;
    private javax.swing.JTextField tfHorario;
    private javax.swing.JTextField tfHorario2;
    private javax.swing.JTextField tfNomeDisciplina;
    // End of variables declaration//GEN-END:variables
}
